generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model User {
//   id String @id @default(uuid())
//   email String @unique 
//   phonenumber String
//   password String
//   photo String
//   role String @default("public")
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt @default(now())

//   @@map("users")
// }

// model Room {
//   id Int @id @default(autoincrement())
//   name String
//   capacity Int
//   resources String[]
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt @default(now())
//   @@map("rooms")
// }

// model Event {
//   id           Int       @id @default(autoincrement())
//   nome         String
//   dataHoraInicio DateTime
//   dataHoraFim   DateTime
//   room         Room     @relation(fields: [roomId], references: [id])
//   roomId       Int
//   organizer  User   @relation(fields: [organizerId], references: [id])
//   organizerId Int
// }

model User {
  id          String      @id @default(uuid())
  name        String
  email       String      @unique
  phonenumber String      @default("")
  photo       String
  role        String      @default("public")
  userEvents  UserEvent[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt

  @@map("users")
}

model Room {
  id        Int      @id @default(autoincrement())
  name      String
  capacity  Int
  resources String[]
  photo     String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  Events     Event[]
  

  @@map("rooms")
}

model Event {
  id                 String      @id @default(uuid())
  nome               String      @db.VarChar()
  dateHourStartsAt   DateTime
  dateHourFinishesAt DateTime
  description        String
  userEvents         UserEvent[]
  Room     Room   @relation(fields: [roomId], references: [id])
  roomId   Int


  @@map("events")
}

model UserEvent {
  id      String @id @default(uuid())
  userId  String
  user    User   @relation(fields: [userId], references: [id])
  eventId String
  event   Event  @relation(fields: [eventId], references: [id])
}
